#include <Servo.h>

#define BUTTON_PIN 2
#define PIR_PIN 7
#define SERVO_PIN 5

Servo myServo;
bool isOpen = false;
unsigned long lastMovementTime = 0;
const unsigned long timeout = 60000;
unsigned long lastCountdownPrint = 0;

void setup() {
    pinMode(BUTTON_PIN, INPUT_PULLUP);
    pinMode(PIR_PIN, INPUT);
    myServo.attach(SERVO_PIN);
    myServo.write(90); 
    Serial.begin(9600);
    Serial.println("Servo is CLOSED at 90째");
}

void loop() {
    static bool buttonState = HIGH;
    bool currentButtonState = digitalRead(BUTTON_PIN);
    int pirState = digitalRead(PIR_PIN);
    
    if (buttonState == HIGH && currentButtonState == LOW) {
        isOpen = !isOpen; 
        if (isOpen) {
            myServo.write(0);
            Serial.println("Servo is OPEN at 0째");
            lastMovementTime = millis();
            lastCountdownPrint = millis(); 
        } else {
            myServo.write(90); // Close
            Serial.println("Servo is CLOSED at 90째");
        }
        delay(200); // Debounce delay
    }
    buttonState = currentButtonState;
    
   
    if (isOpen && pirState == HIGH) {
        lastMovementTime = millis(); 
        lastCountdownPrint = millis(); 
        Serial.println("Motion detected! Resetting countdown.");
    }
    
    if (isOpen && (millis() - lastMovementTime < timeout)) {
        unsigned long timeLeft = timeout - (millis() - lastMovementTime);
        if (millis() - lastCountdownPrint >= 10000) { 
            Serial.print("Closing in: ");
            Serial.print(timeLeft / 1000);
            Serial.println(" seconds");
            lastCountdownPrint = millis();
        }
    }
    
    
    if (isOpen && (millis() - lastMovementTime >= timeout)) {
        myServo.write(90); 
        Serial.println("Servo is CLOSED at 90째 due to timeout");
        isOpen = false;
    }
}
